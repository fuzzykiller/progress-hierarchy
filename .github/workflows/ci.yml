name: CI Build

on: push

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore -c Release -p:ContinuousIntegrationBuild=true
      - name: Test
        run: dotnet test --no-build -c Release
      - name: Pack
        run: dotnet pack --no-build -c Release -o ./out
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            ./out/*.nupkg
            ./out/*.snupkg
  
  release_github_packages:
    name: Release to GitHub Packages
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build]
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
      - name: Publish package to GitHub
        run: |
          dotnet nuget push "*.nupkg" \
            --api-key "${{ secrets.GITHUB_TOKEN }}" \
            --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
  
  release_nuget:
    name: Release to NuGet.org
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build]
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
      - name: Publish package to NuGet.org
        run: |
          dotnet nuget push "*.nupkg" \
            --api-key "${{ secrets.NUGET_API_KEY }}" \
            --source https://api.nuget.org/v3/index.json

  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [release_github_packages, release_nuget]
    steps:
      - name: Prepare release
        id: prepare_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            * tbd
          draft: true
          prerelease: false